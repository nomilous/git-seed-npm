// Generated by CoffeeScript 1.4.0
var Git, GitRepo, NpmPackage, Shell,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

GitRepo = require('git-seed-core').GitRepo;

Git = require('git-seed-core').Git;

Shell = require('git-seed-core').Shell;

module.exports = NpmPackage = (function(_super) {

  __extends(NpmPackage, _super);

  function NpmPackage() {
    return NpmPackage.__super__.constructor.apply(this, arguments);
  }

  NpmPackage.init = function(repoDir, seq) {
    return new NpmPackage({
      root: seq === 0,
      path: repoDir,
      origin: Git.showOrigin(repoDir),
      branch: Git.showBranch(repoDir),
      ref: Git.showRef(repoDir),
      manager: 'npm'
    });
  };

  NpmPackage.prototype.install = function(callback) {
    var originalDir,
      _this = this;
    originalDir = process.cwd();
    try {
      process.chdir(this.path);
      return Shell.spawn('npm', ['install'], function(error, result) {
        if (error) {
          console.log('(failed)'.red, 'npm install error:', error);
          callback(error, result);
          return;
        }
        console.log('(done)'.green, 'npm install in', _this.path);
        process.chdir(originalDir);
        return callback(error, result);
      });
    } catch (error) {
      process.chdir(originalDir);
      return callback(error, null);
    }
  };

  return NpmPackage;

})(GitRepo);
